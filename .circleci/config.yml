defaults: &defaults
  docker:
  - image: quay.io/pantheon-public/build-tools-ci:4.x
  working_directory: ~/example_wordpress_composer
  environment:
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    ADMIN_USERNAME: admin
    BUILD_TOOLS_VERSION: dev-master
    TERM: dumb

commands:
  setbashenv:
    description: "Copy the bash_env from the first job so that TERMINUS_ENV persists."
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace
    - run: cp /tmp/workspace/bash_env.txt $BASH_ENV
    - run: source $BASH_ENV

version: 2
jobs:
    npmbuild:
      docker:
        - image: node:10.15.3
      steps:
        - checkout
        - run: cd web/wp-content/themes/stevector-sage && npm ci
        - run: cd web/wp-content/themes/stevector-sage && npm run build:production
        - run: git status

        - persist_to_workspace:
            # Must be relative path from working_directory
            root: .
            # Must be relative path from root
            paths:
              - web/wp-content/themes/stevector-sage/dist
    # @todo: common initialization, maybe
    build:
      <<: *defaults
      steps:
      - checkout
      - run: /build-tools-ci/scripts/set-environment
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp
      - run:
          name: copy production theme
          command: cp -r /tmp/web/wp-content/themes/stevector-sage/dist/ web/wp-content/themes/stevector-sage/dist/
      - restore_cache:
          keys:
          - composer
      - run: composer -n build-assets
      - save_cache:
          key: composer
          paths:
          - $HOME/.composer/cache
      - run: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

      - run:
          name: Delete old Multidevs and other prepare steps
          command: terminus -n build:env:delete:ci "$TERMINUS_SITE" --keep=2 --yes      #./vendor/pantheon-systems/docker-build-tools-ci/scripts/from-example-drops-8-composer/ci-scripts/01-prepare

      - run:
          name: deploy
          command: |
            # Create a new multidev site to test on
            terminus -n env:wake "$TERMINUS_SITE.dev"
            terminus -n build:env:create "$TERMINUS_SITE.dev" "$TERMINUS_ENV" --yes --clone-content


      - run: cp $BASH_ENV bash_env.txt
      - persist_to_workspace:
          root: .
          paths:
          - bash_env.txt



    # This job puts a fair bit of complexity in this yml config rather than hiding it
    # In scripts called from the job. That decision is made so that in training sessions
    # done by Pantheon, this job is usable with only with copying/pasting changes to this
    # config.yml file.
    lighthouse:
        docker:
            - image: quay.io/stevector/ci-lighthouse:master
        working_directory: ~/example_wordpress_composer
        steps:
            - setbashenv
            - run:
                name: install lighthouse-ci
                command: |
                  cd .circleci
                  git clone https://github.com/stevector/lighthouse-ci
                  cd lighthouse-ci/frontend
                  yarn install
                  cp no_pwa.js /tmp/artifacts/
            - run:
                name: lighthouse
                command: |
                  # curl the homepage to prime varnish cache.
                  curl https://${TERMINUS_ENV}-${TERMINUS_SITE}.pantheonsite.io
                  sleep 1
                  cd /tmp/artifacts
                  lighthouse --chrome-flags="--headless --disable-gpu --no-sandbox" "https://${TERMINUS_ENV}-${TERMINUS_SITE}.pantheonsite.io" --save-artifacts --save-assets --config-path=no_pwa.js --output=json --output=html
            - run:
                name: report results
                command: |
                  cd .circleci/lighthouse-ci/frontend
                  node pass_fail_pr.js --resultspath=$(find /tmp/artifacts/ -type f -name "*report.json" | head -n 1) --reporturl=${CIRCLE_ARTIFACTS_URL}/$(find /tmp/artifacts/ -type f -name "*report.html"  -exec basename {} \;  | head -n 1)
            - store_artifacts:
                path: /tmp/artifacts
                destination: artifacts

    backstop:
      docker:
      - image: backstopjs/backstopjs:3.9.5
      working_directory: ~/example_drops_8_composer
      steps:
      - setbashenv
      - run: cd backstop && ./run-backstop.sh
      - store_artifacts:
          path: /tmp/artifacts
          destination: artifact
      - run: ./backstop/report-backstop.sh


workflows:
  version: 2
  build_and_test:
    jobs:
      - npmbuild
      - build:
          requires:
            - npmbuild
      - backstop:
          requires:
            - build
      - lighthouse:
          requires:
            - build
