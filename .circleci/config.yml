version: 2.1
workflows:
  version: 2
  build_push_test:
    jobs:
      - cloudfunctiondeploy
      # - gcp-cli/install_and_initialize_cli:
      #     #requires:
      #       #- pantheon/pus
      #     post-steps:
      #       - run: gcloud auth login
      #       - checkout
      #      # - run: gcloud help
      #       #- run: cd frontity && npm ci
      #       - run: cd frontity/build && gcloud functions deploy stevector-composer--pr-75  --project=serverlessplayground --runtime=nodejs10 --trigger-http





orbs:
  # fauxalgore is a joke username where I publish experimental
  # code. https://github.com/fauxalgore/orbs This repo is a playground
  # for Orbs that might become stable elsewhere.
  playground: fauxalgore/playground@0.0.2
  pantheon: pantheon-systems/pantheon@0.1.0
  # https://circleci.com/orbs/registry/orb/circleci/slack
  slack: circleci/slack@2.5.1
  gcp-cli: circleci/gcp-cli@1.0.0




jobs:
  cloudfunctiondeploy:
    docker:
      - image: google/cloud-sdk
        environment:
          STORAGE_BUCKET: pr-000.artifactor.io
    steps:
      - run:
          name: Login to gcloud
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
  backup_test_env:
    docker:
    - image: quay.io/pantheon-public/build-tools-ci:5.x
    steps:
    - run:
        name: Authenticate with Pantheon's CLI using a machine token
        command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
    - run: terminus backup:create $TERMINUS_SITE.test
  deploy_to_test:
    docker:
    - image: quay.io/pantheon-public/build-tools-ci:5.x
    steps:
    - run:
        name: Authenticate with Pantheon's CLI using a machine token
        command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
    - run: echo "I should update the --note field to account for commit messages"
    - run: terminus env:deploy $TERMINUS_SITE.test --note="automatic deployment from CI"  --sync-content --cc
    # This cache clear shouldn't be necessary but run it just to be safe.
    - run: terminus env:clear-cache $TERMINUS_SITE.test
  deploy_to_live:
    docker:
    - image: quay.io/pantheon-public/build-tools-ci:5.x
    steps:
    - run:
        name: Authenticate with Pantheon's CLI using a machine token
        command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
    - run: echo "I should update the --note field to account for commit messages"
    - run: terminus env:deploy $TERMINUS_SITE.live --note="automatic deployment from CI"  --sync-content --cc
    # This cache clear shouldn't be necessary but run it just to be safe.
    - run: terminus env:clear-cache $TERMINUS_SITE.live    
#  slack_notify:
#    executor: alpine
#    steps:
#      - slack/notify
